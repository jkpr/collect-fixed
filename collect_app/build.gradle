/**************************************************************************************************
 GRADLE CONFIG
 *************************************************************************************************/

if ((new File(gradle.local)).exists()) {
    apply from: gradle.local
} else {
    apply from: gradle.remote
}

applicationScripts.each {
    apply from: it
}

apply plugin: 'com.android.application'

com.android.ddmlib.DdmPreferences.setTimeOut(60000)

android {
    // The following are set in the common.gradle file
    compileSdkVersion(27)
    buildToolsVersion('26.0.2')

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion(16)
        targetSdkVersion(22)
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        applicationId("org.pma2020.collect.android")
        versionCode(1062)
        versionName("1.4.8e")
    }

    buildTypes {
        release {
            minifyEnabled(false)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        snapshot {
            // Build type for snapshots
            minifyEnabled true
        }

        debug {
            debuggable(true)
            // Allows AndroidTest JaCoCo reports to be generated
            testCoverageEnabled(false)
//            resValue("bool", "FIREBASE_CRASH_ENABLED", "false")
        }
    }

    packagingOptions { // Pick first occurrence of any files that cause conflicts, as defined in common.gradle
        packageList.each {
            pickFirst it
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildToolsVersion '26.0.2'

    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
    transitive = true
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    if (playServicesPath.exists() && gradle.useLocal) { // Local project is favoured
        compile project(playServicesName)
    } else {
        releaseCompile(group: groupId, name: playServicesArtifactName,
                version: playServicesRelease, ext: 'aar')
        snapshotCompile(group: groupId, name: playServicesArtifactName,
                version: playServicesSnapshot, ext: 'aar')
        debugCompile(group: groupId, name: playServicesArtifactName,
                version: playServicesSnapshot, ext: 'aar')
    }

    // Testing-only dependencies

    // androidTestCompile 'com.android.support.test:runner:0.3'

    // androidTestCompile 'com.android.support.test:rules:0.3'

    // androidTestCompile 'com.android.support:support-annotations:23.1.0'

    // androidTestCompile 'com.android.support:support-v13:23.1.0'

    // androidTestCompile 'junit:junit:4.12'
    implementation 'com.android.support:support-v13:27.0.2'
    implementation 'com.android.support:customtabs:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:multidex:1.0.2'

    ////    implementation 'com.google.android.gms:play-services-analytics:10.0.1'

    ////    implementation 'com.google.android.gms:play-services-maps:10.0.1'

    ////    implementation 'com.google.android.gms:play-services-location:10.0.1'

    //    implementation('com.google.code.gson:gson:2.6.2') {

    //        exclude group: 'org.apache.httpcomponents'

    //    }

    //    implementation 'com.google.firebase:firebase-core:10.0.1'

    //    implementation 'com.google.firebase:firebase-crash:10.0.1'

    //    implementation('com.google.http-client:google-http-client:1.22.0') {

    //        exclude group: 'org.apache.httpcomponents'

    //    }

    ////    implementation('com.google.oauth-client:google-oauth-client:1.22.0') {

    ////        exclude group: 'org.apache.httpcomponents'

    ////    }

    //    implementation 'commons-io:commons-io:2.5'

    implementation 'net.sf.kxml:kxml2:2.3.0'

    //    implementation 'net.sf.opencsv:opencsv:2.3'

    //implementation('org.opendatakit:opendatakit-javarosa:2.7.0') {
    //    exclude module: 'joda-time'
    //}

    //    implementation 'org.osmdroid:osmdroid-android:5.6.4'

    //    implementation 'org.slf4j:slf4j-android:1.6.1-RC1'

    //    implementation 'pub.devrel:easypermissions:0.2.1'

    //    implementation('com.google.api-client:google-api-client-android:1.22.0') {

    //        exclude group: 'org.apache.httpcomponents'

    //    }

    //    implementation('com.google.apis:google-api-services-drive:v3-rev64-1.22.0') {

    //        exclude group: 'org.apache.httpcomponents'

    //    }

    //    implementation('com.google.apis:google-api-services-sheets:v4-rev463-1.22.0') {

    //        exclude group: 'org.apache.httpcomponents'

    //    }
    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0'
    implementation 'net.danlew:android.joda:2.9.9'
    testCompile 'junit:junit:4.12'
}
